package org.serratec.persistence;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

import org.serratec.model.Funcionario;

public class ExemplosStream {

	public static void main(String[] args) {
		Funcionario f1 = new Funcionario(1, "Roni", "DP", 1500.00);
		Funcionario f2 = new Funcionario(2, "Pedro", "DP", 4000.00);
		Funcionario f3 = new Funcionario(3, "Fábio", "DP", 5000.00);
		Funcionario f4 = new Funcionario(4, "Fabiano", "DP", 3000.00);
		Funcionario f5 = new Funcionario(5, "Francarlo", "DP", 2300.00);

		List<Funcionario> funcionarios = Arrays.asList(f1, f2, f3, f4, f5);

		// Retornaria true se todos da lista fossem do setor DP.
		boolean achou = funcionarios.stream().allMatch(f -> f.getSetor().equals("DP"));

		// Retornaria true se qualquer um for DP.
		boolean achou2 = funcionarios.stream().anyMatch(f -> f.getSetor().equals("DP"));

		System.out.println(achou);
		System.out.println(achou2);

		List<String> nomes = funcionarios.stream().sorted(Comparator.comparing(Funcionario::getNome).reversed())
				.map(Funcionario::getNome).collect(Collectors.toList());

		System.out.println(nomes);
	}

}
